import{_ as i,c as s,o as a,ag as t}from"./chunks/framework.S-Qvb3wi.js";const u=JSON.parse('{"title":"Upgrading Meilisearch","description":"","frontmatter":{},"headers":[],"relativePath":"user-guides/upgrade-and-migration/meilisearch-upgrade.md","filePath":"user-guides/upgrade-and-migration/meilisearch-upgrade.md"}'),n={name:"user-guides/upgrade-and-migration/meilisearch-upgrade.md"};function r(o,e,p,l,h,d){return a(),s("div",null,e[0]||(e[0]=[t(`<h1 id="upgrading-meilisearch" tabindex="-1">Upgrading Meilisearch <a class="header-anchor" href="#upgrading-meilisearch" aria-label="Permalink to &quot;Upgrading Meilisearch&quot;">​</a></h1><p>Meilisearch, the search engine used by Open Archiver, requires a manual data migration process when upgrading to a new version. This is because Meilisearch databases are only compatible with the specific version that created them.</p><p>If an Open Archiver upgrade includes a major Meilisearch version change, you will need to migrate your search index by following the process below.</p><h2 id="migration-process-overview" tabindex="-1">Migration Process Overview <a class="header-anchor" href="#migration-process-overview" aria-label="Permalink to &quot;Migration Process Overview&quot;">​</a></h2><p>For self-hosted instances using Docker Compose (as recommended), the migration process involves creating a data dump from your current Meilisearch instance, upgrading the Docker image, and then importing that dump into the new version.</p><h3 id="step-1-create-a-dump" tabindex="-1">Step 1: Create a Dump <a class="header-anchor" href="#step-1-create-a-dump" aria-label="Permalink to &quot;Step 1: Create a Dump&quot;">​</a></h3><p>Before upgrading, you must create a dump of your existing Meilisearch data. You can do this by sending a POST request to the <code>/dumps</code> endpoint of the Meilisearch API.</p><ol><li><p><strong>Find your Meilisearch container name</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div><p>Look for the service name that corresponds to Meilisearch, usually <code>meilisearch</code>.</p></li><li><p><strong>Execute the dump command</strong>: You will need your Meilisearch Admin API key, which can be found in your <code>.env</code> file as <code>MEILI_MASTER_KEY</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://localhost:7700/dumps&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer YOUR_MEILI_MASTER_KEY&quot;</span></span></code></pre></div><p>This will start the dump creation process. The dump file will be created inside the <code>meili_data</code> volume used by the Meilisearch container.</p></li><li><p><strong>Monitor the dump status</strong>: The dump creation request returns a <code>taskUid</code>. You can use this to check the status of the dump.</p><p>For more details on dump and import, see the <a href="https://www.meilisearch.com/docs/learn/update_and_migration/updating" target="_blank" rel="noreferrer">official Meilisearch documentation</a>.</p></li></ol><h3 id="step-2-upgrade-your-open-archiver-instance" tabindex="-1">Step 2: Upgrade Your Open Archiver Instance <a class="header-anchor" href="#step-2-upgrade-your-open-archiver-instance" aria-label="Permalink to &quot;Step 2: Upgrade Your Open Archiver Instance&quot;">​</a></h3><p>Once the dump is successfully created, you can proceed with the standard Open Archiver upgrade process.</p><ol><li><p><strong>Pull the latest changes and Docker images</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span></code></pre></div></li><li><p><strong>Stop the running services</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span></code></pre></div></li></ol><h3 id="step-3-import-the-dump" tabindex="-1">Step 3: Import the Dump <a class="header-anchor" href="#step-3-import-the-dump" aria-label="Permalink to &quot;Step 3: Import the Dump&quot;">​</a></h3><p>Now, you need to restart the services while telling Meilisearch to import from your dump file.</p><ol><li><p><strong>Modify <code>docker-compose.yml</code></strong>: You need to temporarily add the <code>--import-dump</code> flag to the Meilisearch service command. Find the <code>meilisearch</code> service in your <code>docker-compose.yml</code> and modify the <code>command</code> section.</p><p>You will need the name of your dump file. It will be a <code>.dump</code> file located in the directory mapped to <code>/meili_data</code> inside the container.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    meilisearch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ... other service config</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;--master-key=\${MEILI_MASTER_KEY}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;--env=production&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;--import-dump=/meili_data/dumps/YOUR_DUMP_FILE.dump&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ]</span></span></code></pre></div></li><li><p><strong>Restart the services</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>Meilisearch will now start and import the data from the dump file. This may take some time depending on the size of your index.</p></li></ol><h3 id="step-4-clean-up" tabindex="-1">Step 4: Clean Up <a class="header-anchor" href="#step-4-clean-up" aria-label="Permalink to &quot;Step 4: Clean Up&quot;">​</a></h3><p>Once the import is complete and you have verified that your search is working correctly, you should remove the <code>--import-dump</code> flag from your <code>docker-compose.yml</code> to prevent it from running on every startup.</p><ol><li><strong>Remove the <code>--import-dump</code> line</strong> from the <code>command</code> section of the <code>meilisearch</code> service in <code>docker-compose.yml</code>.</li><li><strong>Restart the services</strong> one last time:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div></li></ol><p>Your Meilisearch instance is now upgraded and running with your migrated data.</p><p>For more advanced scenarios or troubleshooting, please refer to the <strong><a href="https://www.meilisearch.com/docs/learn/update_and_migration/updating" target="_blank" rel="noreferrer">official Meilisearch migration guide</a></strong>.</p>`,19)]))}const g=i(n,[["render",r]]);export{u as __pageData,g as default};
